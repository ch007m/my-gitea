; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ; General Settings
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ; Application run mode, affects performance and debugging: "dev" or "prod", default is "prod"
; ; Mode "dev" makes Gitea easier to develop and debug, values other than "dev" are treated as "prod" which is for production use.
RUN_MODE = prod
APP_NAME = Gitea: Git with a cup of tea
RUN_USER = cmoullia
WORK_PATH = ./gitea

[database]
; ; Database to use. Either "mysql", "postgres", "mssql" or "sqlite3".
DB_TYPE = sqlite3
SSL_MODE = disable
PATH = ./data/gitea.db
LOG_SQL = false

[server]
PROTOCOL = https
HTTP_PORT = 3333

# Certificate generated by gitea cert client
CERT_FILE = pki/gitea/cert.pem
KEY_FILE = pki/gitea/key.pem

# openssl DO NOT WORK as we got : unable to verify the first certificate
# If we try to add the CA root + localhost crt to a chain crt file, then we got another error: self-signed certificate in certificate chain
CERT_FILE = pki/openssl/localhost.crt
KEY_FILE = pki/openssl/localhost.key

# minica or mkcert DO NOT WORK as we got : unable to verify the first certificate
#CERT_FILE = pki/minica/localhost/cert.pem
#KEY_FILE = pki/minica/localhost/key.pem

# certbot
# source ~/.pyvirt/bin/activate
# pip install certbot==2.6.0
# pip install -U certbot-dns-godaddy==2.6.0
# sudo certbot certonly -v --authenticator dns-godaddy --dns-godaddy-propagation-seconds 900 --dns-godaddy-credentials godaddy.ini --keep-until-expiring --non-interactive --expand --server https://acme-v02.api.letsencrypt.org/directory -d 'snowdrop.dev'

# Certificate generated by cert manager and let's encrypt and which is working :-)
#CERT_FILE = pki/localhost.crt
#KEY_FILE = pki/localhost.key

SSH_DOMAIN = localhost
DOMAIN = localhost
ROOT_URL = https://localhost:3333/
DISABLE_SSH = false
SSH_PORT = 22
LFS_START_SERVER = true
LFS_JWT_SECRET = 5QGUMBO9GNrSNzqomNd5-2SSkobHFq06_2kOGE4WbAc
OFFLINE_MODE = false

[repository]
ROOT = ./data/gitea-repositories

[lfs]
PATH = ./data/lfs

[mailer]
ENABLED = false

[service]
REGISTER_EMAIL_CONFIRM = false
ENABLE_NOTIFY_MAIL = false
DISABLE_REGISTRATION = false
ALLOW_ONLY_EXTERNAL_REGISTRATION = false
ENABLE_CAPTCHA = false
REQUIRE_SIGNIN_VIEW = false
DEFAULT_KEEP_EMAIL_PRIVATE = false
DEFAULT_ALLOW_CREATE_ORGANIZATION = true
DEFAULT_ENABLE_TIMETRACKING = true
NO_REPLY_ADDRESS = noreply.localhost

[openid]
ENABLE_OPENID_SIGNIN = true
ENABLE_OPENID_SIGNUP = true

[cron.update_checker]
ENABLED = false

[session]
PROVIDER = file

[log]
MODE = console
LEVEL = info
ROOT_PATH = ./log

[repository.pull-request]
DEFAULT_MERGE_STYLE = merge

[repository.signing]
DEFAULT_TRUST_MODEL = committer

[security]
INSTALL_LOCK = true
INTERNAL_TOKEN = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE3MDQyMDc0ODh9.PKSP7z2m3eGz1xnC0usFnNMtNF1HNl59Kfyaxjxjbbo
PASSWORD_HASH_ALGO = pbkdf2

[oauth2]
JWT_SECRET = DflTDLiznTW5iFtR2Eo7G-7s0AUXl3kMbR_bV33Ej98
